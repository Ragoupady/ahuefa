<?php

namespace SR\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * NewsRepository
 *(
  * This class was generated by the Doct)rine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends EntityRepository
{
	public function myFindAll($page,$nbPerPage)
	{
		$querybuilder = $this->createQueryBuilder('n')
					->orderBy('n.newsDate','DESC');
		$query = $querybuilder->getQuery();
		$query->setFirstResult(($page-1) * $nbPerPage)    // On définit l'annonce à partir de laquelle commencer la liste
		->setMaxResults($nbPerPage);				      // Ainsi que le nombre d'annonce à afficher sur une page


	 // Enfin, on retourne l'objet Paginator correspondant à la requête construite
    // (n'oubliez pas le use correspondant en début de fichier)
    	return new Paginator($query, true);
	}	

		/**
		* Cette methode permet de retourner une liste des $limit derniers articles
		* $limit permet d'indiquer le nombre d'articles qu'on souhaite retourner
		*/
	public function getNewsHome($limit)
	{
		$qb = $this->createQueryBuilder('n')
					->orderBy('n.newsDate','DESC')
					->setMaxResults($limit);

		
		return $qb->getQuery()->getResult();

	}	

		/**
		* Cette methode permet de retourner une liste d'article correspondant à un mots
		* $content permet d'indiquer le mot contenu dans les articles qu'on souhaite retourner
		*/
	public function getNewsSearch($content)
	{
		$qb = $this->createQueryBuilder('n')
					->where('n.title LIKE :title')
					->setParameter('title', '%'.$content.'%')
					->orWhere('n.content LIKE :content')
					->setParameter('content', '%'.$content.'%')
					->orderBy('n.newsDate','DESC')
					;
				
		
		return $qb->getQuery()->getResult();

	}	

	public function getNewsComments($id)
	{	
		$qb = $this->createQueryBuilder('n')
				   ->leftJoin('n.comments','c')
				   ->addSelect('c')
				    ->where('n.id = :id')
      				->setParameter('id', $id)
				   

			;

		$result = $qb->getQuery()->getSingleResult();
			
		return $result;
	}
}
