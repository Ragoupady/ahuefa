{# src/SR/BlogBundle/Resources/views/Event/add.html.twig #}
{% extends "SRBlogBundle::layout.html.twig" %}

{% block body %}
          <h1> Ajouter un nouveau évenement</h1></br>


<div class="well">
  {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

    {# Les erreurs générales du formulaire. #}
    {{ form_errors(form) }}



    <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventCategory, "Type de l'évenement", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventCategory) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventCategory, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>



    <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.title, "Titre de l'évenement", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.title) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

    {# Champ content pour le contenu de l'évenement #}
    <div class="form-group">
      {{ form_label(form.content, "Contenu de l'évenement", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}
      {{ form_errors(form.title) }}
      <div class="col-sm-8">
        {{ form_widget(form.content, {'attr': {'cols': '80', 'rows': '10'} }) }}
      </div>
    </div>

  {# Génération du label + error + widget pour la Date de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.postDate, "Date de publication", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.postDate) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.postDate, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

  {# Génération du label + error + widget pour status de publication de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.status, "Publier", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.status) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.status, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

      {# Génération du label + error + widget pour status de l'évenement, eventStatus#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventStatus, "Statut", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventStatus) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventStatus, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>





      {# Génération du label + error + widget pour eventStartDate de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventStartDate, "Date de début", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventStartDate) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventStartDate, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

      {# Génération du label + error + widget pour eventEndDate de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventEndDate, "Date de fin", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventEndDate) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventEndDate, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

      {# Génération du label + error + widget pour eventRate de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventRate, "Tarif", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventRate) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventRate, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>




      {# Génération du label + error + widget pour eventGuest de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventGuest, "Invités", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventGuest) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventGuest, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>


          {# Génération du label + error + widget pour eventLocation de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.eventLocation, "Lieu", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.eventLocation) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.eventLocation, {'attr': {'class': 'form-control'}}) }}
      </div>
    </div>

<div class="well">

      {# Génération du label + error + widget pour les films de l'évenement#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.movies, "Films", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.movies) }}

      <div class="col-sm-4">
        {# Génération de l'input. #}
        {{ form_widget(form.movies, {'attr': {'class': ''}}) }}
      </div>
    </div>
 </div>
    {# Génération du label + error + widget pour Image#}
  <div class="form-group">
      {# Génération du label. #}
      {{ form_label(form.image, "Image de l'événement", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

      {# Affichage des erreurs pour ce champ précis. #}
      {{ form_errors(form.image) }}

    <div class="col-sm-4">
        <span class="btn btn-default btn-file">
          {# Génération de l'input. #}
          {{ form_widget(form.image, {'attr': {'class': ''}}) }}
        </span>
      </div>
    </div>

  {# Pour le bouton Envoyer, pas de label ni d'erreur, on affiche juste le widget #}
  {{ form_widget(form.envoyer, {'attr': {'class': 'btn btn-primary'}}) }}

  {# Génération automatique des champs pas encore écrits.
     Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
     et tous les champs cachés (type « hidden »). #}
  {{ form_rest(form) }}
  
  {# Fermeture de la balise <form> du formulaire HTML #}
  {{ form_end(form) }}
</div>




{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#sr_blogbundle_event_movies');

    // On ajoute un lien pour ajouter un nouveau film
    var $addLink = $('<a href="#" id="add_movie" class="btn btn-default">Ajouter un film</a>');
    $container.append($addLink);

    // On ajoute un nouved
    $addLink.click(function(e) {
      addMovie($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvel article par exemple).
    if (index == 0) {
      addCategory($container);
    } else {
      // Pour chaque film déjà existante, on ajoute un lien de suppression
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire Movie
    function addMovie($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Film n°' + (index+1))
          .replace(/__name__/g, index));

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien
      $deleteLink.click(function(e) {
        $prototype.remove();

        e.preventDefault(); // évite qu'un # apparaisse dans l'URL

        return false;
      });
    }
  });
</script>
{% endblock %}




