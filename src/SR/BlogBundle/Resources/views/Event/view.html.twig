{# src/SR/BlogBundle/Resources/views/Event/view.html.twig #}
{% extends "SRBlogBundle::layout.html.twig" %}

{% block body %}
   
<div class="contenu_static">    
        
    <h1 class="event_type">{{event.eventCategory.name}}</h1>
    <h3> {{event.title}}</h3>
    {% if event.image.id is defined %} 
    <img class="image_event"src="{{ asset(event.image.webPath| apply_filter('thumbnail_event')) }}" alt="{{ event.image.alt }}"/>
    {% endif %}
    <div class="resume_film_encadre">
        <p class="resume_film_contenu"><span class="quand_resume">Quand :</span> Le {{event.eventStartDate| localizeddate('full', 'none')}} à {{event.eventStartDate|date("H:i")}}</p>
        <p class="resume_film_contenu"><span class="quand_resume">Où :</span> <span id="adresse">{{event.eventLocation}}</span></p>
        
        <p class="resume_film_contenu"><span class="quand_resume">Participation aux frais:</span>       {{event.eventRate}}</p>
        <p class="resume_film_contenu"><span class="quand_resume">Invités: </span>    {{event.eventGuest}}</p>

    </div>

    <div id="map-canvas"></div>

    <p>{{event.content| raw}}</p>


<ul class="bloc_movies">
         {%for movie in event.movies %}
            {% if event.movies| length < 2 %}  
                <h3 class="film_projete">Film projeté</h3>
            {% else %} 
                <h3 class="film_projete">Film projeté N°{{ loop.index }}</h3>
            {% endif %}
                <h3 class="movie_title">{{ movie.title|e }}</h3>
                <p class="movie_author">de {{ movie.author|e }} ({{ movie.year|e }})  {{ movie.duration|date('H\\hi\\m\\i\\n')}}</p>
              
               
                {% if event.image.id is defined %}
                <img class="image_post"src="{{ asset(movie.image.webPath | apply_filter('thumbnail_filter')) }}" alt="{{ movie.image.alt }}"/>
                {% endif %}
                <br>
                <p>{{ movie.movieContent|raw }}</p>
                <h3> A propos de {{ movie.author|e }}</h3>
                <p>{{ movie.authoBio|e }}</p>

   		 {% endfor %}

</ul>
{% if is_granted('ROLE_MODERATEUR') %}
    <a class="bouton" href="{{path('sr_blog_evenement_update',{'slug': event.slug})}}">Modifier</a>
    <a class="bouton2" href="{{path('sr_blog_evenement_delete',{'slug': event.slug})}}">Supprimer</a><br><br>
{% endif %}
         
    {% include'SRBlogBundle:Comment:indexEvent.html.twig' with { 'comments': comments }%}

    <h3>Ajouter un commentaire</h3>
{% if is_granted('ROLE_USER') %}
    {% render(controller('SRBlogBundle:Comment:newEvent', { 'event' : event } )) %}

{% else %}
 <p>Vous devez être enregistré pour laisser un commentaire.</p>
{% endif %}
</div>  

{# GOOGLE MAP #}

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?language=fr&region=FR&key=AIzaSyBwBVUW3YT_rVM4HFA68-h5l9VRqIg92lo"></script>
    <script type="text/javascript">
        
      var geocoder;
      var map;
      var markers = new Array();
      var i = 0;

      /* Initialisation de la carte  */       
       
      function initialize() {
        /* Instanciation du geocoder  */
        geocoder = new google.maps.Geocoder();
        var pantin = new google.maps.LatLng(48.892294, 2.409040);
        var myOptions  = {
          zoom: 17,
          scrollwheel: false,
          scaleControl: false,
          draggable: false,
          center: pantin,
          mapTypeId: google.maps.MapTypeId.ROADMAP 
        };
        $adress=document.getElementById('adresse').innerHTML;
        
        
        codeAddress($adress);

        map = new google.maps.Map(document.getElementById('map-canvas'), myOptions);

      }



    function codeAddress($adress) {
     /* Récupération de la valeur de l'adresse saisie */
     var address = $adress;
     /* Appel au service de geocodage avec l'adresse en paramètre */
     geocoder.geocode( { 'address': address}, function(results, status) {
      /* Si l'adresse a pu être géolocalisée */
      if (status == google.maps.GeocoderStatus.OK) {
       /* Récupération de sa latitude et de sa longitude */

       
       map.setCenter(results[0].geometry.location);
      

       /* Affichage du marker */
       var marker = new google.maps.Marker({
        map: map,
        position: results[0].geometry.location
       });


       /* Permet de supprimer le marker précédemment affiché */
       markers.push(marker);
       if(markers.length > 1)
        markers[(i-1)].setMap(null);
        i++;
       } else {
        alert("Le geocodage n\'a pu etre effectue pour la raison suivante: " + status);
       }
      });
  }

           
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>

    {# END GOOGLE MAP #}

{% endblock %}