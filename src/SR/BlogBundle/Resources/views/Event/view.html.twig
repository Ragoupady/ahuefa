{# src/SR/BlogBundle/Resources/views/Event/view.html.twig #}
{% extends "SRBlogBundle::layout.html.twig" %}

{% block content %}
   
    <div class="contenu_static">
        <h1 class="event_type">{{event.eventCategory.name}}</h1>
        <h3> {{event.title}}</h3>

        {% if event.image.id is defined %}
            <img class="image_event"src="{{ asset(event.image.webPath| apply_filter('thumbnail_event')) }}" alt="{{ event.image.alt }}"/>
        {% endif %}
        <div class="resume_film_encadre">
            <p class="resume_film_contenu">
                <span class="quand_resume">Quand :</span>
                Le {{event.eventStartDate| localizeddate('full', 'none')}} à {{event.eventStartDate|date("H:i")}}
            </p>
            <p class="resume_film_contenu">
                <span class="quand_resume">Où :</span>
                <span id="adresse">{{event.eventLocation}}</span>
            </p>

            <p class="resume_film_contenu">
                <span class="quand_resume">Participation aux frais:</span>
                {{event.eventRate}}
            </p>
            <p class="resume_film_contenu">
                <span class="quand_resume">Invités: </span>
                {{event.eventGuest}}
            </p>
        </div>

        <div id="map-canvas"></div>
        <div class="text-justify">
            <p>{{event.content| raw}}</p>
            <ul class="bloc_movies">
                {%for movie in event.movies %}
                    {% if event.movies| length < 2 %}
                        <h3 class="film_projete">Film projeté</h3>
                    {% else %}
                        <h3 class="film_projete">Film projeté N°{{ loop.index }}</h3>
                    {% endif %}
                    <h3 class="movie_title">{{ movie.title|e }}</h3>
                    <p class="movie_author">de {{ movie.author|e }} ({{ movie.year|e }})  {{ movie.duration|date('H\\hi\\m\\i\\n')}}</p>

                    {% if event.image.id is defined %}
                        <img class="image_post"src="{{ asset(movie.image.webPath | apply_filter('thumbnail_filter')) }}" alt="{{ movie.image.alt }}"/>
                    {% endif %}
                    <br>
                    <p>{{ movie.movieContent|raw }}</p>
                    {% if movie.author and movie.author is not null %}
                        <h3> A propos de {{ movie.author|e }}</h3>
                    {% endif %}
                    {% if movie.authoBio %}
                        <p>{{ movie.authoBio|e }}</p>
                    {% endif %}
                {% endfor %}
            </ul>
        </div>
        {% if is_granted('ROLE_MODERATEUR') %}
            <p><a href="javascript:;" data-target="#updateEventModal"  data-toggle="modal" class="bouton">Modifier</a></p>
            <p><a href="javascript:;" data-target="#deleteEventModal" data-toggle="modal" class="bouton2">Supprimer</a></p>
        {% endif %}
        <br>
        {% include'SRBlogBundle:Comment:indexEvent.html.twig' with { 'comments': comments }%}

        <h3>Ajouter un commentaire</h3>
        {% if is_granted('ROLE_USER') %}
            {% render(controller('SRBlogBundle:Comment:newEvent', { 'event' : event } )) %}
        {% else %}
            <p>Vous devez être enregistré pour laisser un commentaire.</p>
        {% endif %}
    </div>

    {#MODAL MODIFIER EVENEMENT#}
    <div class="modal fade" id="updateEventModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"></div>
    {#MODAL SUPPRIMER EVENEMENT#}
    <div class="modal fade" id="deleteEventModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"></div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?language=fr&region=FR&key=AIzaSyBwBVUW3YT_rVM4HFA68-h5l9VRqIg92lo"></script>
    <script type="text/javascript">

    (function(){

        {# GESTION MODAL #}
        $("#updateEventModal").on('show.bs.modal', function(e){
            $.ajax({
                url :  Routing.generate('sr_blog_evenement_update', {slug: '{{event.slug}}'} ),
                type : 'GET',
                success : function(html, statut){ // code_html contient le HTML renvoyé
                    $("#updateEventModal").html(html);
                    datepicker();
                    wysiwyg();
                },
                error : function(resultat, statut, erreur){
                    console.log("La requète n'a pas abouti")
                }
            });
        });

        $("#deleteEventModal").on('show.bs.modal', function(e){

            $.ajax({
                url :  Routing.generate('sr_blog_evenement_delete', {slug: '{{event.slug}}'} ),
                type : 'GET',
                success : function(html, statut){ // code_html contient le HTML renvoyé
                    $("#deleteEventModal").html(html);
                },
                error : function(resultat, statut, erreur){
                    console.log("La requète n'a pas abouti")
                }
            });
        });
        {# FIN GESTION MODAL #}

        {# Fonction qui permet d'utiliser le datepicker bootstrap dans une modal #}
        var datepicker =  function (){

            $('.datepicker').datepicker({
                dateFormat: "dd-mm-yy"
            });
            //Ce code permet d'éviter que l'utilisation du datepicker déclenche l'évenement show.bs.modal.
            $(".datepicker").datepicker().on('show.bs.modal', function(event) {
                event.stopPropagation();
            });
        };

        var wysiwyg = function (){
            $('#sr_blogbundle_news_content').wysihtml5({
                "font-styles": true, //Font styling, e.g. h1, h2, etc. Default true
                "emphasis": true, //Italics, bold, etc. Default true
                "lists": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
                "html": false, //Button which allows you to edit the generated HTML. Default false
                "link": true, //Button to insert a link. Default true
                "image": true, //Button to insert an image. Default true,
                "color": true //Button to change color of font
            });
        };





        {# GOOGLE MAP #}
        var geocoder;
        var map;
        var markers = new Array();
        var i = 0;

        /* Initialisation de la carte  */
        function initialize() {
            /* Instanciation du geocoder  */
            geocoder = new google.maps.Geocoder();
            var pantin = new google.maps.LatLng(48.892294, 2.409040);
            var myOptions  = {
                zoom: 17,
                scrollwheel: false,
                scaleControl: false,
                draggable: false,
                center: pantin,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            $adress=document.getElementById('adresse').innerHTML;
            codeAddress($adress);
            map = new google.maps.Map(document.getElementById('map-canvas'), myOptions);
        }

        function codeAddress($adress) {
            /* Récupération de la valeur de l'adresse saisie */
            var address = $adress;
            /* Appel au service de geocodage avec l'adresse en paramètre */
            geocoder.geocode( { 'address': address}, function(results, status) {
            /* Si l'adresse a pu être géolocalisée */
            if (status == google.maps.GeocoderStatus.OK) {
                /* Récupération de sa latitude et de sa longitude */
                map.setCenter(results[0].geometry.location);

                /* Affichage du marker */
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });

                /* Permet de supprimer le marker précédemment affiché */
                markers.push(marker);
                if(markers.length > 1)
                markers[(i-1)].setMap(null);
                i++;
            } else {
            alert("Le geocodage n\'a pu etre effectue pour la raison suivante: " + status);
            }
            });
        }
        google.maps.event.addDomListener(window, 'load', initialize);

        {# END GOOGLE MAP #}
    })();
    </script>

{% endblock %}
